<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ecust.sharebook.mapper.rBookUserBorrowMapper" >
  <resultMap id="BaseResultMap" type="com.ecust.sharebook.pojo.rBookUserBorrow" >
    <id column="BORROW_ID" property="borrowId" jdbcType="INTEGER" />
    <result column="BOOK_ID" property="bookId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USR_BORROW_STATE" property="usrBorrowState" jdbcType="BIT" />
    <result column="BORROW_DATE_TIME" property="borrowDateTime" jdbcType="TIMESTAMP" />
    <result column="RETURN_DATE_TIME" property="returnDateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    BORROW_ID, BOOK_ID, USER_ID, USR_BORROW_STATE, BORROW_DATE_TIME, RETURN_DATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from r_book_user_borrow
    where BORROW_ID = #{borrowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from r_book_user_borrow
    where BORROW_ID = #{borrowId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ecust.sharebook.pojo.rBookUserBorrow" >
    <selectKey resultType="java.lang.Integer" keyProperty="borrowId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into r_book_user_borrow (BOOK_ID, USER_ID, USR_BORROW_STATE, 
      BORROW_DATE_TIME, RETURN_DATE_TIME)
    values (#{bookId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{usrBorrowState,jdbcType=BIT}, 
      #{borrowDateTime,jdbcType=TIMESTAMP}, #{returnDateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ecust.sharebook.pojo.rBookUserBorrow" >
    <selectKey resultType="java.lang.Integer" keyProperty="borrowId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into r_book_user_borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        BOOK_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="usrBorrowState != null" >
        USR_BORROW_STATE,
      </if>
      <if test="borrowDateTime != null" >
        BORROW_DATE_TIME,
      </if>
      <if test="returnDateTime != null" >
        RETURN_DATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="usrBorrowState != null" >
        #{usrBorrowState,jdbcType=BIT},
      </if>
      <if test="borrowDateTime != null" >
        #{borrowDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDateTime != null" >
        #{returnDateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ecust.sharebook.pojo.rBookUserBorrow" >
    update r_book_user_borrow
    <set >
      <if test="bookId != null" >
        BOOK_ID = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="usrBorrowState != null" >
        USR_BORROW_STATE = #{usrBorrowState,jdbcType=BIT},
      </if>
      <if test="borrowDateTime != null" >
        BORROW_DATE_TIME = #{borrowDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDateTime != null" >
        RETURN_DATE_TIME = #{returnDateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where BORROW_ID = #{borrowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ecust.sharebook.pojo.rBookUserBorrow" >
    update r_book_user_borrow
    set BOOK_ID = #{bookId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      USR_BORROW_STATE = #{usrBorrowState,jdbcType=BIT},
      BORROW_DATE_TIME = #{borrowDateTime,jdbcType=TIMESTAMP},
      RETURN_DATE_TIME = #{returnDateTime,jdbcType=TIMESTAMP}
    where BORROW_ID = #{borrowId,jdbcType=INTEGER}
  </update>
</mapper>