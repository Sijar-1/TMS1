<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ecust.sharebook.mapper.rBcircleMemberMapper">
    <resultMap id="BaseResultMap" type="com.ecust.sharebook.pojo.rBcircleMember">
        <id column="BC_MEM_ID" property="bcMemId" jdbcType="INTEGER"/>
        <result column="Book_Circle_ID" property="bookCircleId" jdbcType="INTEGER"/>
        <result column="MEMBER_ID" property="memberId" jdbcType="INTEGER"/>
        <result column="IF_CREATER" property="ifCreater" jdbcType="INTEGER"/>

    </resultMap>

    <resultMap type="com.ecust.sharebook.pojo.util.shelf.book" id="shelfResultMap">
        <id column="ISBN" property="isbn"/>
        <result column="sortTime" property="sortTime"/>
        <result column="total" property="count"/>
        <result column="id" property="id"/>
        <result column="ownerId" property="ownerId"/>
    </resultMap>

    <resultMap type="com.ecust.sharebook.pojo.util.circle.circleCatgBook" id="circleCatgBook">
        <id column="catgId" property="catgId"/>
        <collection property="catg_book_list" ofType="com.ecust.sharebook.pojo.util.circle.shelfByCatg">
            <id column="isbn" property="isbn"/>
            <result column="bookName" property="bookName"/>
            <result column="picPath" property="picPath"/>
            <result column="briefIntro" property="briefIntro"/>
            <result column="ifCreater" property="ifCreater"/>

        </collection>
    </resultMap>

    <sql id="Base_Column_List">
    BC_MEM_ID, Book_Circle_ID, MEMBER_ID
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from r_bcircle_member
        where BC_MEM_ID = #{bcMemId,jdbcType=INTEGER}
    </select>
    <select id="selectByMemberId" resultType="java.lang.Integer">
    select Book_Circle_ID from r_bcircle_member
    where MEMBER_ID = #{memberId}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from r_bcircle_member
    where BC_MEM_ID = #{bcMemId,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.ecust.sharebook.pojo.rBcircleMember">
        <selectKey resultType="java.lang.Integer" keyProperty="bcMemId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into r_bcircle_member (Book_Circle_ID, MEMBER_ID,IF_CREATER)
        values (#{bookCircleId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{ifCreater,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ecust.sharebook.pojo.rBcircleMember">
        <selectKey resultType="java.lang.Integer" keyProperty="bcMemId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into r_bcircle_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookCircleId != null">
                Book_Circle_ID,
            </if>
            <if test="memberId != null">
                MEMBER_ID,
            </if>
            <if test="ifCreater != null">
                IF_CREATER,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookCircleId != null">
                #{bookCircleId,jdbcType=INTEGER},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=INTEGER},
            </if>
            <if  test="ifCreater != null">
                 #{ifCreater,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ecust.sharebook.pojo.rBcircleMember">
        update r_bcircle_member
        <set>
            <if test="bookCircleId != null">
                Book_Circle_ID = #{bookCircleId,jdbcType=INTEGER},
            </if>
            <if test="memberId != null">
                MEMBER_ID = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="ifCreater != null">
                IF_CREATER = #{ifCreater,jdbcType=INTEGER},
            </if>
        </set>
        where BC_MEM_ID = #{bcMemId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ecust.sharebook.pojo.rBcircleMember">
    update r_bcircle_member
    set Book_Circle_ID = #{bookCircleId,jdbcType=INTEGER},
      MEMBER_ID = #{memberId,jdbcType=INTEGER},
      IF_CREATER = #{ifCreater,jdbcType=INTEGER}
    where BC_MEM_ID = #{bcMemId,jdbcType=INTEGER}
  </update>


    <select id="findShelfCircle" resultMap="shelfResultMap">
        SELECT r_user_book.ISBN as isbn, max(ADD_TIME) as sortTime,COUNT(*)as total,BOOK_ID as id,r_user_book.OWNER_ID as ownerId
        FROM r_bcircle_member JOIN r_user_book
        ON r_bcircle_member.MEMBER_ID = r_user_book.OWNER_ID
        LEFT JOIN r_book_category
        ON r_user_book.ISBN = r_book_category.ISBN
        <where>
            r_bcircle_member.Book_Circle_ID =#{bookCircleId}
            AND r_user_book.PRIVACY = 0
            <if test="bCatgId != null and bCatgId != ''">and MCATG_ID = #{bCatgId}</if>
        </where>
        GROUP BY r_user_book.ISBN
    </select>



    <select id="findShelf" resultType="java.util.Map">
    SELECT r_user_book.ISBN as isbn,count( r_user_book.ISBN) as total
    FROM r_bcircle_member  , r_user_book
    WHERE r_bcircle_member.MEMBER_ID = r_user_book.OWNER_ID
    AND r_bcircle_member.Book_Circle_ID =#{bookCircleId}
    AND r_user_book.PRIVACY = 0
    GROUP BY r_user_book.ISBN
  </select>



    <select id="findCatg" resultMap="circleCatgBook">
        SELECT r_book_category.MCATG_ID as catgId,r_book_category.ISBN as isbn,book_inf.BOOK_NAME as bookName,
        book_inf.BRIEF_INTRO as briefIntro, book_inf.PIC_PATH as picPath
        FROM r_book_category,book_inf
        WHERE r_book_category.ISBN IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id.isbn}
        </foreach>
        AND r_book_category.ISBN = book_inf.ISBN
    </select>

    <select id="findCircleBookList" resultType="java.util.Map">
     SELECT
    BOOK_ID as id,BOOK_NAME as bookName,PIC_PATH as picPath,AUTHOR as author,ADD_TIME as sortTime,BORROW_STATE as borrowState,
    PRIVACY as privacy,book_inf.ISBN as isbn,r_bcircle_member.MEMBER_ID as ownerId
    FROM r_bcircle_member,r_user_book,book_inf
    WHERE r_bcircle_member.MEMBER_ID = r_user_book.OWNER_ID
    AND r_user_book.ISBN = book_inf.ISBN
    AND r_bcircle_member.Book_Circle_ID =#{bookCircleId}
    AND  r_user_book.ISBN = #{isbn}
    AND r_user_book.PRIVACY = 0

  </select>


    <select id="findCatgShelf" resultType="java.util.Map">
     SELECT r_user_book.ISBN as isbn,r_user_book.BOOK_ID as bookId, r_user_book.ADD_TIME as addTime,book_inf.BOOK_NAME as bookName,book_inf.PIC_PATH as picPath
     FROM r_bcircle_member  , r_user_book,book_inf
     WHERE r_bcircle_member.MEMBER_ID = r_user_book.OWNER_ID
     AND book_inf.ISBN = r_user_book.ISBN
     AND r_bcircle_member.Book_Circle_ID = #{bookCircleId}
     AND r_user_book.PRIVACY = 0
     AND r_user_book.ISBN = #{isbn}
  </select>


    <select id="list" resultType="com.ecust.sharebook.pojo.rBcircleMember">
        SELECT
        BC_MEM_ID, Book_Circle_ID, MEMBER_ID,IF_CREATER
        from r_bcircle_member
        <where>
            <if test="bcMemId != null and bcMemId != ''"> and BC_MEM_ID = #{bcMemId} </if>
            <if test="bookCircleId != null and bookCircleId != ''"> and Book_Circle_ID = #{bookCircleId} </if>
            <if test="memberId != null and memberId != ''"> and MEMBER_ID = #{memberId} </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by BC_MEM_ID desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="delete"  resultType="java.lang.Integer">
    delete from r_bcircle_member
    where Book_Circle_ID=  #{bookCircleId}
	AND MEMBER_ID = #{memberId}


    </select>
</mapper>